# Generated by Django 4.1 on 2022-08-04 07:15

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Catalogue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=100, verbose_name='Модель')),
                ('image', models.ImageField(blank=True, upload_to='media/products/%Y/%m/%d', verbose_name='Фото')),
                ('code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Код')),
                ('color', models.CharField(max_length=100, verbose_name='Цвет')),
                ('size', models.CharField(max_length=100, verbose_name='Размеры')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100, verbose_name='Клиент')),
                ('phone', models.CharField(max_length=100, verbose_name='Номер телефона')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='Адрес клиента')),
                ('file', models.FileField(blank=True, upload_to='media/clients/%Y/%m/%d')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('occupation', models.CharField(blank=True, max_length=100, verbose_name='Должность')),
                ('date_start', models.DateField(blank=True, verbose_name='Дата начала работы')),
                ('fio', models.CharField(max_length=64, unique=True, verbose_name='ФИО')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Номер телефона')),
                ('phone1', models.CharField(blank=True, max_length=20, verbose_name='Дополнительный номер')),
                ('monthly_salary', models.IntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('size', models.CharField(max_length=40, verbose_name='Размер')),
                ('quantity', models.IntegerField(default=0, verbose_name='Кол-во')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=40, verbose_name='Цена сом')),
                ('total', models.DecimalField(decimal_places=2, max_digits=40, verbose_name='Сумма сом')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('client', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='manufacture.client', verbose_name='Клиент')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manufacture.catalogue', verbose_name='Mодель')),
            ],
        ),
        migrations.CreateModel(
            name='DailyTimesheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('rate', models.IntegerField(default=0, verbose_name='Ставка за работу')),
                ('daily_prod_quant', models.IntegerField(default=0, verbose_name='Количество выработки за день')),
                ('rate_day', models.PositiveIntegerField(blank=True)),
                ('stanok', models.CharField(blank=True, choices=[('ПУ', 'ПУ'), ('ЭВА', 'ЭВА')], max_length=40)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='manufacture.employee')),
            ],
        ),
        migrations.CreateModel(
            name='DailyProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('quantity', models.IntegerField(default=0, verbose_name='Кол. пар')),
                ('package', models.IntegerField(blank=True, verbose_name='Упаковка')),
                ('defect_worker', models.PositiveIntegerField(default=0, verbose_name='Брак рабочие')),
                ('defect_machine', models.PositiveIntegerField(default=0, verbose_name='Брак станок')),
                ('defect_saya', models.PositiveIntegerField(default=0, verbose_name='Брак САЯ')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('catalogue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='catalogues', to='manufacture.catalogue', verbose_name='Модель')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_accountant', models.BooleanField(default=False)),
                ('is_cashier', models.BooleanField(default=False)),
                ('new_password', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SalaryTotal',
            fields=[
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='manufacture.employee')),
                ('month', models.DateTimeField(auto_now=True)),
                ('working_days', models.IntegerField(null=True)),
                ('fact_work_days', models.IntegerField(null=True)),
                ('oklad_social_fund', models.IntegerField(null=True)),
                ('oklad_fact', models.IntegerField(null=True)),
                ('social_fund', models.DecimalField(decimal_places=2, default=0, max_digits=50)),
                ('firm_social_fund', models.DecimalField(decimal_places=2, default=0, max_digits=50)),
                ('oklad_nachislen', models.IntegerField(null=True)),
                ('viplata', models.IntegerField(null=True)),
                ('sales', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salary_sales', to='manufacture.sale')),
            ],
        ),
        migrations.AddConstraint(
            model_name='dailytimesheet',
            constraint=models.UniqueConstraint(fields=('date', 'employee'), name='unique_date_for_employee'),
        ),
    ]
